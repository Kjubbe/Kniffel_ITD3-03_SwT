/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import game.Card;
import game.Host;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hanne
 */
public class GameView extends javax.swing.JFrame  {

        
    
    /**
     * Creates new form GameView
     */
    public GameView() {
        initComponents();
        tableSetFieldNames();
        playercard.setToolTipText("PART2");
        playercard.setName(""); // NOI18N
        playercard.setRowHeight(20);
        jScrollPane2.setViewportView(playercard);

        

        crossFieldButton.setText("Feld streichen");
        crossFieldButton.setEnabled(false);
        crossFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crossFieldButtonActionPerformed(evt);
            }
        });
        
        
        
            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        playercard = new javax.swing.JTable();
        crossFieldButton = new javax.swing.JButton();
        chooseFieldButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        OptionsButton = new javax.swing.JMenu();
        pauseGame = new javax.swing.JMenuItem();
        restartGame = new javax.swing.JMenuItem();
        quitGame = new javax.swing.JMenuItem();
        Player1Button = new javax.swing.JMenu();
        showPlayer1Card = new javax.swing.JMenuItem();
        skipPlayer1 = new javax.swing.JMenuItem();
        removePlayer1 = new javax.swing.JMenuItem();
        Player2Button = new javax.swing.JMenu();
        showPlayer2Card = new javax.swing.JMenuItem();
        skipPlayer2 = new javax.swing.JMenuItem();
        removePlayer2 = new javax.swing.JMenuItem();
        Player3Button = new javax.swing.JMenu();
        showPlayer3Card = new javax.swing.JMenuItem();
        skipPlayer3 = new javax.swing.JMenuItem();
        removePlayer3 = new javax.swing.JMenuItem();
        Player4Button = new javax.swing.JMenu();
        showCardPlayer4 = new javax.swing.JMenuItem();
        skipPlayer4 = new javax.swing.JMenuItem();
        removePlayer4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        playercard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {"Zwischensumme:", null},
                {"Bonus bei min. 63:", null},
                {"Gesamter erster Teil:", null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {"Gesamter erster Teil:", null},
                {"Gesamter zweiter Teil:", null},
                {"Endsumme:", null}
            },
            new String [] {
                "", "Punktzahl"
            }
        ));
        playercard.setToolTipText("playercard");
        playercard.setName(""); // NOI18N
        playercard.setRowHeight(20);
        jScrollPane2.setViewportView(playercard);

        crossFieldButton.setText("Feld streichen");
        crossFieldButton.setEnabled(false);
        crossFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crossFieldButtonActionPerformed(evt);
            }
        });

        chooseFieldButton.setText("Feld auswählen");
        chooseFieldButton.setEnabled(false);
        chooseFieldButton.setMaximumSize(new java.awt.Dimension(110, 32));
        chooseFieldButton.setMinimumSize(new java.awt.Dimension(110, 32));

        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        OptionsButton.setText("Optionen");

        pauseGame.setText("Spiel pausieren");
        pauseGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseGameActionPerformed(evt);
            }
        });
        OptionsButton.add(pauseGame);

        restartGame.setText("Spiel neustarten");
        restartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartGameActionPerformed(evt);
            }
        });
        OptionsButton.add(restartGame);

        quitGame.setText("Zurück zum Hauptmenü");
        quitGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitGameActionPerformed(evt);
            }
        });
        OptionsButton.add(quitGame);

        jMenuBar1.add(OptionsButton);

        Player1Button.setText("Spieler 1");
        Player1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player1ButtonActionPerformed(evt);
            }
        });

        showPlayer1Card.setText("Spielerkarte anzeigen");
        Player1Button.add(showPlayer1Card);

        skipPlayer1.setText("Spieler überspringen");
        Player1Button.add(skipPlayer1);

        removePlayer1.setText("Spieler entfernen");
        removePlayer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlayer1ActionPerformed(evt);
            }
        });
        Player1Button.add(removePlayer1);

        jMenuBar1.add(Player1Button);

        Player2Button.setText("Spieler 2");
        Player2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player2ButtonActionPerformed(evt);
            }
        });

        showPlayer2Card.setText("Spielerkarte anzeigen");
        Player2Button.add(showPlayer2Card);

        skipPlayer2.setText("Spieler überspringen");
        Player2Button.add(skipPlayer2);

        removePlayer2.setText("Spieler entfernen");
        removePlayer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlayer2ActionPerformed(evt);
            }
        });
        Player2Button.add(removePlayer2);

        jMenuBar1.add(Player2Button);

        Player3Button.setText("Spieler 3");
        Player3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player3ButtonActionPerformed(evt);
            }
        });

        showPlayer3Card.setText("Spielerkarte anzeigen");
        Player3Button.add(showPlayer3Card);

        skipPlayer3.setText("Spieler überspringen");
        Player3Button.add(skipPlayer3);

        removePlayer3.setText("Spieler entfernen");
        removePlayer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlayer3ActionPerformed(evt);
            }
        });
        Player3Button.add(removePlayer3);

        jMenuBar1.add(Player3Button);

        Player4Button.setText("Spieler 4");
        Player4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player4ButtonActionPerformed(evt);
            }
        });

        showCardPlayer4.setText("Spielerkarte anzeigen");
        showCardPlayer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCardPlayer4ActionPerformed(evt);
            }
        });
        Player4Button.add(showCardPlayer4);

        skipPlayer4.setText("Spieler überspringen");
        Player4Button.add(skipPlayer4);

        removePlayer4.setText("Spieler entfernen");
        removePlayer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlayer4ActionPerformed(evt);
            }
        });
        Player4Button.add(removePlayer4);

        jMenuBar1.add(Player4Button);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(chooseFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crossFieldButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(513, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseFieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(crossFieldButton))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("1");
        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crossFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crossFieldButtonActionPerformed
            // TODO cross a selected field
            System.out.println("test");
    }//GEN-LAST:event_crossFieldButtonActionPerformed

    private void quitGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitGameActionPerformed
        // Stop Game
        Host.stopGame();

    }//GEN-LAST:event_quitGameActionPerformed

    private void Player1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player1ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Player1ButtonActionPerformed

    private void Player2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player2ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Player2ButtonActionPerformed

    private void Player4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player4ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Player4ButtonActionPerformed

    private void Player3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player3ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Player3ButtonActionPerformed

    private void removePlayer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlayer3ActionPerformed
        Host.removePlayer(3);
    }//GEN-LAST:event_removePlayer3ActionPerformed

    private void showCardPlayer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCardPlayer4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showCardPlayer4ActionPerformed

    private void pauseGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseGameActionPerformed
        //Pause Game
        Host.pauseGame();
    }//GEN-LAST:event_pauseGameActionPerformed

    private void restartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartGameActionPerformed
        // Restart Game
        Host.restartGame();
    }//GEN-LAST:event_restartGameActionPerformed

    private void removePlayer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlayer1ActionPerformed
        // Remove Player
        Host.removePlayer(1);
    }//GEN-LAST:event_removePlayer1ActionPerformed

    private void removePlayer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlayer2ActionPerformed
        Host.removePlayer(2);
    }//GEN-LAST:event_removePlayer2ActionPerformed

    private void removePlayer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlayer4ActionPerformed
        Host.removePlayer(4);
    }//GEN-LAST:event_removePlayer4ActionPerformed

    /**
     * Setting the fieldnames into the playercard
     */
    private void tableSetFieldNames() {
        for (int i = 0; i < 6; i++) {
            playercard.setValueAt(Card.fields[i].getName(), i, 0);
        }
        for (int j = 6; j < 13; j++) {
            playercard.setValueAt(Card.fields[j].getName(), j+3, 0);
        }
    }
    
    /**
     * Setting the points into the playercard
     */
    private void tableSetPoints() {
        // TODO show the points of the choosen fields
        //playercard.setValueAt(Card.getPart1(), 9, 1);     // Part 1
        //playercard.setValueAt(Card.getPart1(), 17, 1);    // Part 1
        //playercard.setValueAt(Card.getPart2(), 18, 1);    // Part 2
        //playercard.setValueAt(Card.getTotal(), 19, 1);    // Totals

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu OptionsButton;
    private javax.swing.JMenu Player1Button;
    private javax.swing.JMenu Player2Button;
    private javax.swing.JMenu Player3Button;
    private javax.swing.JMenu Player4Button;
    private javax.swing.JButton chooseFieldButton;
    private javax.swing.JButton crossFieldButton;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem pauseGame;
    private javax.swing.JTable playercard;
    private javax.swing.JMenuItem quitGame;
    private javax.swing.JMenuItem removePlayer1;
    private javax.swing.JMenuItem removePlayer2;
    private javax.swing.JMenuItem removePlayer3;
    private javax.swing.JMenuItem removePlayer4;
    private javax.swing.JMenuItem restartGame;
    private javax.swing.JMenuItem showCardPlayer4;
    private javax.swing.JMenuItem showPlayer1Card;
    private javax.swing.JMenuItem showPlayer2Card;
    private javax.swing.JMenuItem showPlayer3Card;
    private javax.swing.JMenuItem skipPlayer1;
    private javax.swing.JMenuItem skipPlayer2;
    private javax.swing.JMenuItem skipPlayer3;
    private javax.swing.JMenuItem skipPlayer4;
    // End of variables declaration//GEN-END:variables
}
